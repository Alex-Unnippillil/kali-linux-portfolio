name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-secret' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Cache yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - run: corepack enable
      - run: yarn install --immutable
      - run: yarn dedupe --check

      - run: yarn lint:ci
      - run: yarn typecheck
      - run: yarn validate:icons
      - run: yarn build:ci
      - name: Jest tests
        run: yarn test --ci | tee jest-report.txt
      - name: Upload Jest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-report
          path: jest-report.txt

      - name: Vitest unit tests
        run: yarn test:unit --run | tee vitest-report.txt
      - name: Upload Vitest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-report
          path: vitest-report.txt

      - name: E2E tests
        run: yarn test:e2e --reporter=html | tee e2e-report.txt
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            e2e-report.txt
            playwright-report
          if-no-files-found: ignore

      - name: Lighthouse CI

        run: yarn lighthouse --collect.startServerCommand="yarn start" --collect.startServerReadyPattern="ready on"
      - name: Lighthouse (desktop)
        run: yarn lighthouse --collect.startServerCommand="yarn start" --collect.startServerReadyPattern="ready on" --collect.settings.preset=desktop --collect.additive
      - name: Upload Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci

