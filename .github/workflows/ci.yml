name: CI

on:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Install dependencies
        run: |
          set -o pipefail
          yarn install --immutable --immutable-cache 2>&1 | tee yarn-install.log
      - name: Fail on Yarn warnings
        run: |
          if grep -i "warning" yarn-install.log; then
            echo "::error::Yarn install produced warnings"
            exit 1
          else
            echo "No Yarn warnings detected"
          fi
      - name: Upload Yarn install log
        uses: actions/upload-artifact@v4
        with:
          name: yarn-install-log
          path: yarn-install.log

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: npm run tsc -- --noEmit

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn test --coverage

  security:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - name: Run Yarn npm audit (high severity)
        run: |
          set -o pipefail
          audit_exit=0
          yarn npm audit --severity high --json > audit.json || audit_exit=$?
          if [ ! -s audit.json ]; then
            echo '{"type":"auditSummary","message":"No audit suggestions","severity":"high"}' > audit.json
          fi
          cat audit.json
          if [ "$audit_exit" -ne 0 ]; then
            echo "::error::High severity vulnerabilities detected by npm audit"
            exit "$audit_exit"
          fi
      - name: Check for outdated dependencies
        env:
          NPM_CONFIG_LOGLEVEL: error
          npm_config_loglevel: error
        run: |
          set -o pipefail
          outdated_exit=0
          yarn exec npm outdated --json > outdated.json || outdated_exit=$?
          if [ ! -s outdated.json ]; then
            echo '{}' > outdated.json
          fi
          cat outdated.json
          if [ "$outdated_exit" -ne 0 ]; then
            echo "::warning::npm outdated exited with code $outdated_exit"
          fi
      - name: Upload dependency health artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dependency-health
          path: |
            audit.json
            outdated.json

  vercel-preview:
    runs-on: ubuntu-latest
    needs: install
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
