name: CI

on:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: npm run tsc -- --noEmit

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn test --coverage

  security:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn npm audit

  vercel-preview:
    runs-on: ubuntu-latest
    needs: install
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy preview
        id: deploy
        run: |
          set -eo pipefail
          DEPLOY_URL=$(npx vercel deploy --prebuilt --environment=preview --token=${{ secrets.VERCEL_TOKEN }} --yes | tail -n 1 | tr -d '[:space:]')
          if [ -z "$DEPLOY_URL" ]; then
            echo "Failed to determine Vercel preview URL" >&2
            exit 1
          fi
          echo "preview-url=${DEPLOY_URL}" >> "$GITHUB_OUTPUT"
          echo "VERCEL_DEPLOYMENT_URL=${DEPLOY_URL}" >> "$GITHUB_ENV"
          echo "Preview available at ${DEPLOY_URL}"
      - name: Run Lighthouse CI
        env:
          LHCI_PREVIEW_URL: ${{ steps.deploy.outputs.preview-url }}
          LHCI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx lhci autorun
      - name: Upload Lighthouse report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: .lighthouseci/*.html
