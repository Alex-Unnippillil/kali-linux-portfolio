name: CI

on:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check
      - run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check
      - run: npm run tsc -- --noEmit

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check
      - run: yarn test --coverage

  security:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check
      - run: yarn npm audit

  vercel-preview:
    runs-on: ubuntu-latest
    needs: install
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check
      - run: npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  bundle-report:
    runs-on: ubuntu-latest
    needs: install
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --immutable --immutable-cache
      - run: yarn dedupe --check
      - run: yarn build
      - name: Compare bundle to baseline
        id: bundle_report
        run: node scripts/bundle-report.mjs --output bundle-report.json
        continue-on-error: true
      - name: Comment bundle regressions
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const marker = '<!-- bundle-report -->';
            if (!fs.existsSync('bundle-report.json')) {
              return;
            }
            const report = JSON.parse(fs.readFileSync('bundle-report.json', 'utf8'));
            const offenders = report.offenders ?? [];
            const formatBytes = (bytes) => {
              if (!Number.isFinite(bytes)) return `${bytes}`;
              const absolute = Math.abs(bytes);
              if (absolute >= 1024 * 1024) {
                return `${(bytes / (1024 * 1024)).toFixed(1)} MB`;
              }
              if (absolute >= 1024) {
                return `${(bytes / 1024).toFixed(1)} kB`;
              }
              return `${bytes} B`;
            };
            const issueNumber = context.issue.number;
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: issueNumber,
              per_page: 100,
            });
            const previous = comments.find((comment) => comment.body?.includes(marker));
            if (!offenders.length) {
              if (previous) {
                await github.rest.issues.deleteComment({
                  ...context.repo,
                  comment_id: previous.id,
                });
              }
              return;
            }
            const lines = [
              marker,
              '### ⚠️ Bundle size regression detected',
              '',
              `The following routes grew by more than **${formatBytes(report.thresholdBytes)}** compared to the stored baseline.`,
              '',
              offenders
                .map((entry) => `- \`${entry.route}\`: +${formatBytes(entry.delta)} (now ${formatBytes(entry.current)})`)
                .join('\n'),
              '',
              'Review these routes and run `yarn bundle:baseline` after accepting intentional increases.',
            ];
            const body = lines.join('\n');
            if (previous) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: previous.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: issueNumber,
                body,
              });
            }
      - name: Fail on regressions
        if: steps.bundle_report.outcome == 'failure'
        run: exit 1
