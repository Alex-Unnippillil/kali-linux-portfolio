name: Preview performance report

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: preview-report-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  report:
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build preview bundle
        env:
          NEXT_TELEMETRY_DISABLED: '1'
        run: |
          yarn build

      - name: Prepare base branch worktree
        env:
          NEXT_TELEMETRY_DISABLED: '1'
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          git worktree add ../base ${{ github.base_ref }}
          pushd ../base
          corepack enable
          yarn install --immutable
          yarn build
          popd

      - name: Run Lighthouse CI
        env:
          NEXT_TELEMETRY_DISABLED: '1'
        run: |
          npx lhci autorun --config=lighthouserc.json --upload.target=filesystem

      - name: Compute bundle size diff
        run: |
          node scripts/bundle-report.mjs --config bundle-report.config.json --output bundle-report.json

      - name: Compose preview comment
        run: |
          node scripts/compose-preview-comment.mjs --bundle-report bundle-report.json --output preview-report.md --docs docs/preview-report.md

      - name: Publish comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const marker = '<!-- preview-report -->';
            const body = fs.readFileSync('preview-report.md', 'utf8');
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              per_page: 100
            });
            const existing = comments.find((comment) => comment.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }

      - name: Cleanup base worktree
        if: always()
        run: |
          git worktree remove ../base --force || true
