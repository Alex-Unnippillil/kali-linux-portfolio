diff --git a/dist/build/webpack/loaders/error-loader.js b/dist/build/webpack/loaders/error-loader.js
index 04812c7ecbebcb38e4315ae25b049858c20f99cb..9ea44e5b7f577f0e0de53c9c39639e57acd61695 100644
--- a/dist/build/webpack/loaders/error-loader.js
+++ b/dist/build/webpack/loaders/error-loader.js
@@ -16,12 +16,12 @@ Object.defineProperty(exports, "default", {
     };
 }
 const ErrorLoader = function() {
-    var _this__module_issuer, _this__module, _this__compiler;
+    var _this__module, _this__compiler, _this__compilation, _this__issuer;
     // @ts-ignore exists
     const options = this.getOptions() || {};
     const { reason = 'An unknown error has occurred' } = options;
     // @ts-expect-error
-    const resource = ((_this__module = this._module) == null ? void 0 : (_this__module_issuer = _this__module.issuer) == null ? void 0 : _this__module_issuer.resource) ?? null;
+    const resource = ((_this__module = this._module) == null ? void 0 : (_this__issuer = (_this__compilation = this._compilation) == null ? void 0 : _this__compilation.moduleGraph.getIssuer(_this__module)) == null ? void 0 : _this__issuer.resource) ?? null;
     const context = this.rootContext ?? ((_this__compiler = this._compiler) == null ? void 0 : _this__compiler.context);
     const issuer = resource ? context ? _path.default.relative(context, resource) : resource : null;
     const err = Object.defineProperty(new Error(reason + (issuer ? `\nLocation: ${(0, _picocolors.cyan)(issuer)}` : '')), "__NEXT_ERROR_CODE", {
@@ -33,4 +33,4 @@ const ErrorLoader = function() {
 };
 const _default = ErrorLoader;
 
-//# sourceMappingURL=error-loader.js.map
+//# sourceMappingURL=error-loader.js.map
